2023-09-23 09:41:48,819 - pypeal - INFO - Connected to database server localhost as user root
2023-09-23 09:43:30,170 - db.py - INFO - Connected to database server localhost as user root
2023-09-23 09:48:12,344 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:48:26,918 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:48:26,924 - db.py - INFO - Creating new pypeal database...
2023-09-23 09:48:26,925 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 09:48:26,934 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 09:49:07,981 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:49:07,987 - db.py - INFO - Creating new pypeal database...
2023-09-23 09:49:07,988 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 09:50:42,669 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:50:42,674 - db.py - INFO - Creating new pypeal database...
2023-09-23 09:50:42,676 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 09:51:57,651 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:51:57,657 - db.py - INFO - Creating new pypeal database...
2023-09-23 09:51:57,660 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 09:57:05,172 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:57:05,179 - db.py - INFO - Creating new pypeal database...
2023-09-23 09:57:05,180 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 09:57:25,765 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:57:25,772 - db.py - INFO - Creating new pypeal database...
2023-09-23 09:57:25,773 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 09:58:52,207 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:58:52,213 - db.py - INFO - Creating new pypeal database...
2023-09-23 09:58:52,214 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 09:59:12,591 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:59:12,597 - db.py - INFO - Creating new pypeal database...
2023-09-23 09:59:12,599 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 09:59:12,603 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 09:59:54,651 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 09:59:54,668 - db.py - INFO - Creating new pypeal database...
2023-09-23 09:59:54,670 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 09:59:54,674 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:00:15,412 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:00:15,439 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:00:15,441 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:00:15,449 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:00:41,391 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:00:41,417 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:00:41,419 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:00:41,426 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:01:10,826 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:01:33,193 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:01:33,216 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:01:33,219 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:07:29,508 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:07:29,527 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:07:29,529 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:07:43,857 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:07:43,877 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:07:43,879 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:08:06,509 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:08:06,526 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:08:06,527 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:08:39,932 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:08:39,951 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:08:39,953 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:11:18,390 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:11:18,410 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:11:18,411 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:11:18,415 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:12:39,185 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:12:39,202 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:12:39,204 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:12:39,208 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:13:42,009 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:13:42,026 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:13:42,028 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:13:50,919 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:13:50,937 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:13:50,939 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:13:50,943 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:14:49,679 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:14:49,696 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:14:49,697 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:14:49,705 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:14:49,712 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:14:52,146 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:14:52,165 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:14:52,167 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:14:52,178 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:14:52,181 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:15:00,759 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:15:00,778 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:15:00,779 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:15:00,795 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:15:00,798 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:15:34,692 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:15:34,716 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:15:34,718 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:15:34,723 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:17:11,007 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:17:11,029 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:17:11,031 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:17:38,990 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:17:39,009 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:17:39,010 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:17:39,012 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:17:39,015 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:17:47,642 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:17:47,662 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:17:47,663 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:17:47,666 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:17:47,670 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:17:59,662 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:17:59,677 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:17:59,678 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:17:59,686 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:17:59,687 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:18:35,078 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:18:35,106 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 10:18:35,107 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:18:35,110 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:18:35,110 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 10:18:35,120 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:18:35,120 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 10:18:35,123 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:18:35,123 - db.py - DEBUG - Executing query: USE `pypeal`;

CREATE TABLE `ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 10:18:38,424 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:18:38,441 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 10:18:38,442 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:18:38,443 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:18:38,443 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 10:18:38,455 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:18:38,455 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 10:18:38,460 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:18:38,460 - db.py - DEBUG - Executing query: USE `pypeal`;

CREATE TABLE `ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 10:19:10,158 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:19:10,177 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 10:19:10,178 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:19:10,179 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:19:10,179 - db.py - DEBUG - Executing query: USE pypeal
2023-09-23 10:19:10,180 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 10:19:10,187 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:19:10,188 - db.py - DEBUG - Executing query: USE pypeal
2023-09-23 10:22:10,505 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:22:10,523 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 10:22:10,524 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:22:10,527 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:22:10,527 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 10:22:10,530 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:22:10,530 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 10:22:10,534 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:22:10,534 - db.py - DEBUG - Executing query: USE `pypeal`;

CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 10:22:33,360 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:22:33,378 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 10:22:33,379 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:22:33,380 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:22:33,380 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 10:22:33,391 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:22:33,391 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 10:22:33,394 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:22:33,395 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 10:24:04,222 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 10:24:04,238 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 10:24:04,239 - db.py - INFO - Creating new pypeal database...
2023-09-23 10:24:04,240 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 10:24:04,240 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 10:24:04,249 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 10:24:04,249 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 10:24:04,252 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 10:24:04,252 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 11:18:43,055 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 11:18:43,086 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 11:18:43,087 - db.py - INFO - Creating new pypeal database...
2023-09-23 11:18:43,089 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 11:18:54,848 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 11:18:54,886 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 11:18:54,887 - db.py - INFO - Creating new pypeal database...
2023-09-23 11:18:54,889 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 11:20:07,625 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 11:20:07,643 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 11:20:07,644 - db.py - INFO - Creating new pypeal database...
2023-09-23 11:20:07,648 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 11:20:48,091 - db.py - INFO - Connecting to database server localhost as user root
2023-09-23 11:20:48,110 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 11:20:48,111 - db.py - INFO - Creating new pypeal database...
2023-09-23 11:20:48,113 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 11:22:17,514 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:22:17,530 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 11:22:17,531 - db.py - INFO - Creating new pypeal database...
2023-09-23 11:22:17,533 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 11:22:17,533 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 11:22:34,769 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:22:34,785 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 11:22:34,786 - db.py - INFO - Creating new pypeal database...
2023-09-23 11:22:34,787 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 11:22:34,787 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 11:23:51,128 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:23:51,145 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 11:23:51,146 - db.py - INFO - Creating new pypeal database...
2023-09-23 11:23:51,147 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 11:23:51,148 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 11:23:51,151 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 11:23:51,152 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 11:23:51,155 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 11:23:51,155 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 11:35:58,655 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:35:58,673 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 11:35:58,674 - db.py - INFO - Creating new pypeal database...
2023-09-23 11:35:58,676 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 11:35:58,676 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 11:35:58,687 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 11:35:58,687 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 11:35:58,691 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 11:35:58,691 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 11:36:12,534 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:38:07,180 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:38:58,989 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:38:59,006 - main.py - ERROR - Unable to create database
Traceback (most recent call last):
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 302, in _open_connection
    self._cmysql.connect(**cnx_kwargs)
_mysql_connector.MySQLInterfaceError: Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 16, in __init__
    self.db = mysql.connector.connect(user=DB_USER, password=DB_PASSWORD, host=DB_HOST)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/pooling.py", line 293, in connect
    return CMySQLConnection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 128, in __init__
    self.connect(**kwargs)
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/abstracts.py", line 1217, in connect
    self._open_connection()
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 307, in _open_connection
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1045 (28000): Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/main.py", line 21, in <module>
    Database(overwrite_database=True).close()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 18, in __init__
    raise DatabaseError(f'Unable to connect to database server {DB_HOST} as user {DB_USER}: {e.msg}') from e
db.DatabaseError: Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:38:59,013 - main.py - DEBUG - Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:39:31,027 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:39:31,049 - main.py - ERROR - Unable to create database
Traceback (most recent call last):
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 302, in _open_connection
    self._cmysql.connect(**cnx_kwargs)
_mysql_connector.MySQLInterfaceError: Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 16, in __init__
    self.db = mysql.connector.connect(user=DB_USER, password=DB_PASSWORD, host=DB_HOST)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/pooling.py", line 293, in connect
    return CMySQLConnection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 128, in __init__
    self.connect(**kwargs)
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/abstracts.py", line 1217, in connect
    self._open_connection()
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 307, in _open_connection
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1045 (28000): Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/main.py", line 21, in <module>
    Database(overwrite_database=True).close()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 18, in __init__
    raise DatabaseError(f'Unable to connect to database server {DB_HOST} as user {DB_USER}: {e.msg}') from e
db.DatabaseError: Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:39:31,055 - main.py - DEBUG - Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:39:53,998 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:39:54,016 - main.py - ERROR - Unable to create database
Traceback (most recent call last):
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 302, in _open_connection
    self._cmysql.connect(**cnx_kwargs)
_mysql_connector.MySQLInterfaceError: Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 16, in __init__
    self.db = mysql.connector.connect(user=DB_USER, password=DB_PASSWORD, host=DB_HOST)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/pooling.py", line 293, in connect
    return CMySQLConnection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 128, in __init__
    self.connect(**kwargs)
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/abstracts.py", line 1217, in connect
    self._open_connection()
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 307, in _open_connection
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1045 (28000): Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/main.py", line 21, in <module>
    Database(overwrite_database=True).close()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 18, in __init__
    raise DatabaseError(f'Unable to connect to database server {DB_HOST} as user {DB_USER}: {e.msg}') from e
db.DatabaseError: Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:44:59,310 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:45:08,791 - main.py - ERROR - Unable to create database
Traceback (most recent call last):
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 302, in _open_connection
    self._cmysql.connect(**cnx_kwargs)
_mysql_connector.MySQLInterfaceError: Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 16, in __init__
    self.db = mysql.connector.connect(user=DB_USER, password=DB_PASSWORD, host=DB_HOST)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/pooling.py", line 293, in connect
    return CMySQLConnection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 128, in __init__
    self.connect(**kwargs)
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/abstracts.py", line 1217, in connect
    self._open_connection()
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 307, in _open_connection
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1045 (28000): Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "main.py", line 21, in <module>
    Database(overwrite_database=True).close()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 18, in __init__
    raise DatabaseError(f'Unable to connect to database server {DB_HOST} as user {DB_USER}: {e.msg}') from e
db.DatabaseError: Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:45:24,236 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:45:25,369 - main.py - ERROR - Unable to create database
2023-09-23 11:45:34,421 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:45:34,439 - main.py - ERROR - Unable to create database
2023-09-23 11:45:34,439 - main.py - DEBUG - Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:46:25,856 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:47:10,819 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:47:10,834 - main.py - ERROR - Unable to create database: Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:47:10,835 - main.py - DEBUG - Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:47:46,253 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 11:47:46,270 - main.py - ERROR - Unable to create database: Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 11:47:46,270 - main.py - DEBUG - Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
Traceback (most recent call last):
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 302, in _open_connection
    self._cmysql.connect(**cnx_kwargs)
_mysql_connector.MySQLInterfaceError: Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 16, in __init__
    self.db = mysql.connector.connect(user=DB_USER, password=DB_PASSWORD, host=DB_HOST)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/pooling.py", line 293, in connect
    return CMySQLConnection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 128, in __init__
    self.connect(**kwargs)
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/abstracts.py", line 1217, in connect
    self._open_connection()
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 307, in _open_connection
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1045 (28000): Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/main.py", line 21, in <module>
    Database(overwrite_database=True).close()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 18, in __init__
    raise DatabaseError(f'Unable to connect to database server {DB_HOST} as user {DB_USER}: {e.msg}') from e
db.DatabaseError: Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 21:40:21,189 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 21:40:21,217 - main.py - ERROR - Unable to create database: Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 21:40:21,217 - main.py - DEBUG - Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
Traceback (most recent call last):
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 302, in _open_connection
    self._cmysql.connect(**cnx_kwargs)
_mysql_connector.MySQLInterfaceError: Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 16, in __init__
    self.db = mysql.connector.connect(user=DB_USER, password=DB_PASSWORD, host=DB_HOST)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/pooling.py", line 293, in connect
    return CMySQLConnection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 128, in __init__
    self.connect(**kwargs)
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/abstracts.py", line 1217, in connect
    self._open_connection()
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 307, in _open_connection
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1045 (28000): Access denied for user 'pypeal'@'localhost' (using password: YES)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/main.py", line 21, in <module>
    Database(overwrite_database=True).close()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 18, in __init__
    raise DatabaseError(f'Unable to connect to database server {DB_HOST} as user {DB_USER}: {e.msg}') from e
db.DatabaseError: Unable to connect to database server localhost as user pypeal: Access denied for user 'pypeal'@'localhost' (using password: YES)
2023-09-23 21:40:37,506 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 21:40:37,524 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 21:40:37,525 - db.py - INFO - Creating new pypeal database...
2023-09-23 21:40:37,527 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 21:40:37,527 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 21:40:37,536 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 21:40:37,536 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 21:40:37,543 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 21:40:37,544 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 22:21:06,069 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:25:47,685 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:25:50,237 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=391823
2023-09-23 22:26:06,832 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:26:12,011 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1105994
2023-09-23 22:29:39,910 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:29:44,815 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1583575
2023-09-23 22:30:17,903 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:30:19,883 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1133299
2023-09-23 22:31:14,786 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:31:16,978 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1053733
2023-09-23 22:34:13,711 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:34:16,458 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1386934
2023-09-23 22:36:17,803 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:36:19,015 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=56930
2023-09-23 22:36:28,257 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:36:35,957 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 22:48:25,851 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 22:48:27,440 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=420686
2023-09-23 22:48:45,371 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 22:48:45,661 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 22:49:02,728 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 22:49:02,917 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 22:59:31,435 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 22:59:31,730 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:00:42,449 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:00:42,655 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:01:11,636 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:01:11,866 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:01:50,641 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:01:50,900 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:03:53,729 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:03:53,900 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:04:07,517 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:04:07,760 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:05:05,258 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:05:05,464 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1420125
2023-09-23 23:05:12,818 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 23:05:19,811 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:07:22,718 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 23:07:27,414 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1367972
2023-09-23 23:07:48,125 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:07:48,332 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:09:17,916 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:09:18,108 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:12:04,932 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:12:05,184 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:13:14,148 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:13:14,386 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:14:39,282 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:14:39,492 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:14:49,499 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:14:49,776 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:15:09,222 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:15:09,433 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1546261
2023-09-23 23:15:19,347 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 23:15:39,764 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1453762
2023-09-23 23:16:22,157 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 23:16:24,366 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1301687
2023-09-23 23:16:46,310 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 23:16:48,670 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1517781
2023-09-23 23:16:52,908 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 23:16:54,390 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1130673
2023-09-23 23:36:40,197 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:36:40,235 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:36:40,236 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:36:40,237 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:36:40,238 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:36:40,258 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:36:40,259 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:36:40,261 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:36:40,262 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:36:40,277 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s) RETURNING *
2023-09-23 23:41:20,812 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:41:20,836 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:41:20,837 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:41:20,839 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:41:28,144 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:41:28,168 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:41:28,168 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:41:28,175 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:41:28,175 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:41:32,307 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:42:24,421 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:42:24,440 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:42:24,442 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:42:24,444 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:42:24,445 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:42:24,454 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:42:24,454 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:42:24,470 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:42:24,470 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:42:24,498 - db.py - DEBUG - Executing query: USE pypeal
2023-09-23 23:42:25,640 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:43:09,566 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:43:09,587 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:43:09,587 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:43:09,588 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:43:09,589 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:43:09,597 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:43:09,598 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:43:09,601 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:43:09,601 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:43:09,614 - db.py - DEBUG - Executing query: USE pypeal
2023-09-23 23:43:09,615 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:43:38,283 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:43:38,302 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:43:38,303 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:43:38,304 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:43:38,305 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:43:38,313 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:43:38,313 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:43:38,317 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:43:38,317 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:43:38,330 - db.py - DEBUG - Executing query: USE pypeal
2023-09-23 23:43:38,331 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:43:38,332 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:43:38,333 - db.py - DEBUG - Executing query: SELECT * FROM ringers WHERE name = %s
2023-09-23 23:45:07,855 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:45:07,873 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:45:07,873 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:45:07,875 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:45:07,876 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:45:07,885 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:45:07,886 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:45:07,888 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:45:07,889 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:45:07,902 - db.py - DEBUG - Executing query: USE pypeal
2023-09-23 23:45:07,902 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:45:07,904 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:45:07,904 - db.py - DEBUG - Executing query: SELECT * FROM ringers WHERE name = %s
2023-09-23 23:46:05,598 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:46:05,617 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:46:05,617 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:46:05,619 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:46:05,619 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:46:05,628 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:46:05,628 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:46:05,637 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:46:05,638 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:46:05,655 - db.py - DEBUG - Executing query: USE pypeal
2023-09-23 23:46:05,655 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:46:05,657 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:46:05,657 - db.py - DEBUG - Executing query: SELECT * FROM ringers WHERE name = %s
2023-09-23 23:47:10,525 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 23:47:19,322 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1644360
2023-09-23 23:47:19,327 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:47:19,342 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:47:19,343 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:47:19,345 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:47:19,345 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:47:19,355 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:47:19,355 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:47:19,357 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:47:19,357 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:47:19,371 - db.py - DEBUG - Executing query: USE pypeal
2023-09-23 23:47:19,371 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:47:19,374 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:47:19,375 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:47:19,375 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:47:19,376 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:47:19,376 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:47:19,377 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:47:19,377 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:47:19,378 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:47:19,378 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:55:56,739 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 23:55:58,232 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=393874
2023-09-23 23:55:58,239 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:55:58,256 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:55:58,256 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:55:58,257 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:55:58,258 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:55:58,273 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:55:58,274 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:55:58,280 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:55:58,280 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:55:58,296 - db.py - INFO - Running script scripts/database/003-create-ringer-peals.sql...
2023-09-23 23:55:58,297 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-23 23:56:30,988 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-23 23:56:33,980 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1230031
2023-09-23 23:56:33,989 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-23 23:56:34,013 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-23 23:56:34,014 - db.py - INFO - Creating new pypeal database...
2023-09-23 23:56:34,015 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-23 23:56:34,015 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-23 23:56:34,026 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-23 23:56:34,027 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-23 23:56:34,033 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-23 23:56:34,033 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-23 23:56:34,054 - db.py - INFO - Running script scripts/database/003-create-ringer-peals.sql...
2023-09-23 23:56:34,054 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-23 23:56:34,078 - db.py - DEBUG - Executing query: USE pypeal
2023-09-23 23:56:34,078 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,080 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:56:34,080 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,081 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:56:34,081 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,082 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:56:34,082 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,083 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:56:34,083 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,084 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:56:34,084 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,086 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:56:34,086 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,086 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:56:34,086 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,087 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:56:34,087 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,087 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-23 23:56:34,087 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-23 23:56:34,088 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:09:10,076 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:09:14,568 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1580854
2023-09-24 09:09:14,575 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:09:14,608 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:09:14,609 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:09:14,610 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:09:14,610 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:09:14,624 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:09:14,625 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:09:14,627 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:09:14,628 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:09:14,650 - db.py - INFO - Running script scripts/database/003-create-ringer-peals.sql...
2023-09-24 09:09:14,651 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:09:14,679 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:09:14,679 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:09:14,685 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:16:22,673 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:16:25,297 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1424979
2023-09-24 09:16:25,304 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:16:48,290 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:16:50,377 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1183141
2023-09-24 09:16:50,382 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:16:50,399 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:16:50,399 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:16:50,400 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:16:50,401 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:16:50,401 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:16:50,415 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:16:50,415 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:16:50,419 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:16:50,419 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:16:50,434 - db.py - INFO - Running script scripts/database/003-create-ringer-peals.sql...
2023-09-24 09:16:50,434 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:16:50,448 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:16:50,456 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:16:50,456 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:16:50,458 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:16:50,458 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:18:22,415 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:18:23,244 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=388864
2023-09-24 09:18:23,250 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:18:23,267 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,267 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:18:23,268 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:18:23,269 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:18:23,269 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:18:23,284 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:18:23,284 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:18:23,287 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:18:23,287 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:18:23,301 - db.py - INFO - Running script scripts/database/003-create-ringer-peals.sql...
2023-09-24 09:18:23,301 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:18:23,320 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:18:23,326 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,326 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:18:23,328 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,328 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:18:23,329 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,329 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:18:23,330 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,330 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:18:23,331 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,331 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:18:23,331 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,331 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:18:23,332 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,332 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:18:23,333 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,333 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:18:23,333 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,333 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:18:23,335 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,336 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:18:23,336 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,336 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:18:23,338 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,338 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:18:23,338 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,338 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:18:23,339 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,339 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:18:23,339 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,339 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:18:23,340 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:18:23,340 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:30:49,013 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:30:49,034 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:30:49,034 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:30:49,035 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:30:49,036 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:30:49,037 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:30:49,053 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:30:49,053 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:30:49,056 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:30:49,056 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:30:49,071 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:30:49,071 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:30:49,078 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:30:49,079 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:30:49,091 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:30:52,635 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1342843
2023-09-24 09:31:30,784 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:31:30,801 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:31:30,801 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:31:30,802 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:31:30,802 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:31:30,802 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:31:30,825 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:31:30,825 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:31:30,828 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:31:30,828 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:31:30,844 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:31:30,844 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:31:30,852 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:31:30,852 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:31:30,869 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:31:34,192 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1461232
2023-09-24 09:31:57,697 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:31:57,713 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:31:57,713 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:31:57,714 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:31:57,716 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:31:57,716 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:31:57,734 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:31:57,734 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:31:57,738 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:31:57,738 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:31:57,752 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:31:57,752 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:31:57,764 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:31:57,764 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:31:57,778 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:32:02,233 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1346249
2023-09-24 09:32:02,239 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:02,239 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:32:14,177 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:32:14,194 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:14,194 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:32:14,195 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:32:14,197 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:32:14,197 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:32:14,214 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:32:14,214 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:32:14,220 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:32:14,220 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:32:14,233 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:32:14,233 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:32:14,244 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:32:14,244 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:32:14,257 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:32:16,670 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1140377
2023-09-24 09:32:16,677 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:16,677 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:32:16,679 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:16,679 - db.py - DEBUG - Executing query: SELECT id, name FROM peals WHERE id = %s
2023-09-24 09:32:39,202 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:32:39,220 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:39,221 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:32:39,221 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:32:39,222 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:32:39,223 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:32:39,246 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:32:39,246 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:32:39,249 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:32:39,250 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:32:39,265 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:32:39,265 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:32:39,272 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:32:39,272 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:32:39,284 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:32:42,162 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1620448
2023-09-24 09:32:42,169 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,170 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:32:42,171 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,171 - db.py - DEBUG - Executing query: SELECT id, bellboard_id FROM peals WHERE id = %s
2023-09-24 09:32:42,172 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,172 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,173 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,173 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:32:42,173 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,174 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,175 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,176 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:32:42,176 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,176 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,177 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,177 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:32:42,177 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,177 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,178 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,179 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:32:42,179 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,179 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,180 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,180 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:32:42,181 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,181 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,181 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,182 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:32:42,182 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,182 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,185 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,185 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:32:42,186 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,186 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,187 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,188 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:32:42,188 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,188 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,190 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,190 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:32:42,190 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,190 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:32:42,191 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:32:42,191 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:15,952 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:33:15,973 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:15,974 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:33:15,975 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:33:15,976 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:33:15,976 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:33:15,995 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:33:15,995 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:33:15,999 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:33:15,999 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:33:16,011 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:33:16,011 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:33:16,020 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:33:16,020 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:33:16,034 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:33:18,461 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1434424
2023-09-24 09:33:18,466 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,467 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:33:18,469 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,469 - db.py - DEBUG - Executing query: SELECT id, bellboard_id FROM peals WHERE id = %s
2023-09-24 09:33:18,469 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,469 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:18,471 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,471 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:18,471 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,471 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:18,472 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,472 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:18,472 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,473 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:18,473 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,473 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:18,474 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,474 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:18,475 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,475 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:18,475 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,475 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:18,476 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,476 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:18,476 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,476 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:18,477 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:18,477 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:50,649 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:33:50,667 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:50,667 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:33:50,668 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:33:50,669 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:33:50,669 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:33:50,688 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:33:50,688 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:33:50,692 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:33:50,692 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:33:50,709 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:33:50,709 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:33:50,719 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:33:50,720 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:33:50,733 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:33:54,740 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1435224
2023-09-24 09:33:54,746 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,746 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:33:54,748 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,748 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 09:33:54,749 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,749 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:54,750 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,750 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:54,750 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,751 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:54,751 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,751 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:54,751 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,752 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:54,752 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,753 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:54,753 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,753 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:54,753 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,754 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:54,754 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,754 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:54,757 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,757 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:33:54,757 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,757 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:33:54,758 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:33:54,759 - db.py - DEBUG - Executing query: SELECT id, name FROM ringers WHERE id = %s
2023-09-24 09:35:36,461 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:35:36,481 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:36,481 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:35:36,482 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:35:36,483 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:35:36,483 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:35:36,505 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:35:36,505 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:35:36,509 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:35:36,509 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:35:36,527 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:35:36,527 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:35:36,550 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:35:36,550 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_count` int DEFAULT '0',
  PRIMARY KEY (`ringer_id`),
  UNIQUE KEY `id_unique` (`ringer_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringerpeals` (`ringer_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:35:36,568 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:35:38,371 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1262499
2023-09-24 09:35:38,377 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,378 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:35:38,380 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,380 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 09:35:38,380 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,380 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:35:38,381 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,382 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:35:38,382 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,382 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:35:38,383 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,383 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:35:38,383 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,383 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:35:38,384 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,384 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:35:38,385 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,385 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:35:38,386 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:35:38,386 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:41:08,336 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:41:08,355 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:41:08,355 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:41:08,356 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:41:08,357 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:41:08,357 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:41:08,374 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:41:08,374 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:41:08,380 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:41:08,380 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:41:08,398 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:41:08,398 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:41:08,411 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:41:08,411 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_id` int NOT NULL,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
  CONSTRAINT `fk_ringerpeals_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:41:08,411 - main.py - ERROR - Unable to create database: Error running database install script scripts/database/004-create-ringer-peals.sql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONSTRAINT `fk_ringerpeals_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id' at line 7
2023-09-24 09:41:08,411 - main.py - DEBUG - Error running database install script scripts/database/004-create-ringer-peals.sql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONSTRAINT `fk_ringerpeals_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id' at line 7
Traceback (most recent call last):
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 633, in cmd_query
    self._cmysql.query(
_mysql_connector.MySQLInterfaceError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONSTRAINT `fk_ringerpeals_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id' at line 7

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 43, in initialise
    self.__execute(self.__substitute_sql_params(f.read()))
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 54, in __execute
    self.cursor.execute(query, params)
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/cursor_cext.py", line 330, in execute
    result = self._cnx.cmd_query(
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 77, in wrapper
    return method(cnx, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 641, in cmd_query
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONSTRAINT `fk_ringerpeals_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id' at line 7

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/main.py", line 24, in <module>
    Database.get_connection().initialise(overwrite_database=True)
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 46, in initialise
    raise DatabaseError(f'Error running database install script {path}: {e.msg}') from e
db.DatabaseError: Error running database install script scripts/database/004-create-ringer-peals.sql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONSTRAINT `fk_ringerpeals_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id' at line 7
2023-09-24 09:41:21,157 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:41:21,177 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:41:21,177 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:41:21,178 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:41:21,180 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:41:21,181 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:41:21,203 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:41:21,203 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:41:21,205 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:41:21,205 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:41:21,226 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:41:21,227 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:41:21,234 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:41:21,234 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int NOT NULL,
  `peal_id` int NOT NULL,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_ringerpeals_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:41:21,235 - main.py - ERROR - Unable to create database: Error running database install script scripts/database/004-create-ringer-peals.sql: Referencing column 'ringer_id' and referenced column 'id' in foreign key constraint 'fk_ringerpeals_ringer' are incompatible.
2023-09-24 09:41:21,235 - main.py - DEBUG - Error running database install script scripts/database/004-create-ringer-peals.sql: Referencing column 'ringer_id' and referenced column 'id' in foreign key constraint 'fk_ringerpeals_ringer' are incompatible.
Traceback (most recent call last):
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 633, in cmd_query
    self._cmysql.query(
_mysql_connector.MySQLInterfaceError: Referencing column 'ringer_id' and referenced column 'id' in foreign key constraint 'fk_ringerpeals_ringer' are incompatible.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 43, in initialise
    self.__execute(self.__substitute_sql_params(f.read()))
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 54, in __execute
    self.cursor.execute(query, params)
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/cursor_cext.py", line 330, in execute
    result = self._cnx.cmd_query(
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 77, in wrapper
    return method(cnx, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 641, in cmd_query
    raise get_mysql_exception(
mysql.connector.errors.DatabaseError: 3780 (HY000): Referencing column 'ringer_id' and referenced column 'id' in foreign key constraint 'fk_ringerpeals_ringer' are incompatible.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/main.py", line 24, in <module>
    Database.get_connection().initialise(overwrite_database=True)
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 46, in initialise
    raise DatabaseError(f'Error running database install script {path}: {e.msg}') from e
db.DatabaseError: Error running database install script scripts/database/004-create-ringer-peals.sql: Referencing column 'ringer_id' and referenced column 'id' in foreign key constraint 'fk_ringerpeals_ringer' are incompatible.
2023-09-24 09:42:00,917 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:42:00,932 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:00,932 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:42:00,933 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:42:00,934 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:42:00,934 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:42:00,948 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:42:00,948 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:42:00,953 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:42:00,954 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:42:00,969 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:42:00,969 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:42:00,978 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:42:00,978 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_ringerpeals_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:42:00,995 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:42:05,281 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1322333
2023-09-24 09:42:05,288 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,289 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:42:05,291 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,291 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 09:42:05,291 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,291 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:42:05,293 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,293 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:42:05,294 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,294 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:42:05,296 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,296 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:42:05,296 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,297 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:42:05,297 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,297 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:42:05,298 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,298 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:42:05,298 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,298 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:42:05,299 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,299 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:42:05,299 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,299 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:42:05,300 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,300 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:42:05,300 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:42:05,302 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:43:59,379 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:43:59,396 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:43:59,396 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:43:59,397 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:43:59,399 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:43:59,399 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:43:59,419 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:43:59,420 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:43:59,424 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:43:59,424 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:43:59,439 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:43:59,439 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:43:59,447 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:43:59,447 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringerpeals` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_ringerpeals_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_ringerpeals_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:43:59,462 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:44:00,795 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=321095
2023-09-24 09:44:00,799 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:00,800 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:44:00,802 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:00,802 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 09:44:00,803 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:00,803 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:44:00,805 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:00,805 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:44:00,805 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:00,806 - db.py - DEBUG - Executing query: INSERT INTO peal_ringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:44:28,515 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:44:28,530 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:28,530 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:44:28,531 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:44:28,531 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:44:28,531 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:44:28,550 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:44:28,550 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:44:28,554 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:44:28,554 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:44:28,569 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:44:28,569 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:44:28,581 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:44:28,581 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:44:28,600 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:44:33,975 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1335109
2023-09-24 09:44:33,981 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:33,981 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:44:33,983 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:33,983 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 09:44:33,984 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:33,984 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:44:33,985 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:33,985 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:44:33,985 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:44:33,985 - db.py - DEBUG - Executing query: INSERT INTO peal_ringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:47:09,121 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:47:09,139 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:09,139 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:47:09,140 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:47:09,141 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:47:09,141 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:47:09,160 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:47:09,160 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:47:09,164 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:47:09,164 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:47:09,185 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:47:09,185 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:47:09,194 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:47:09,194 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:47:09,211 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:47:11,000 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1172891
2023-09-24 09:47:11,005 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,005 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:47:11,007 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,007 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 09:47:11,007 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,007 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:47:11,009 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,009 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:47:11,009 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,010 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:47:11,011 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,011 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:47:11,012 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,012 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:47:11,012 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,013 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:47:11,013 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,014 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:47:11,014 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,015 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:47:11,015 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,015 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:47:11,016 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,016 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:47:11,017 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,017 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:47:11,017 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,018 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:47:11,018 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,018 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:47:11,019 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,019 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:47:11,020 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,020 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:47:11,020 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,020 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:47:11,021 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,021 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:47:11,021 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:47:11,021 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:50:40,404 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:50:40,421 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:40,421 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:50:40,422 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:50:40,423 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:50:40,423 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:50:40,440 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:50:40,440 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:50:40,442 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:50:40,442 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:50:40,456 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:50:40,456 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:50:40,465 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:50:40,465 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:50:40,473 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:50:42,700 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1192372
2023-09-24 09:50:42,707 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,707 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:50:42,709 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,709 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 09:50:42,710 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,710 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:50:42,711 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,711 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:50:42,712 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,712 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:50:42,713 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,713 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:50:42,714 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,715 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:50:42,715 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,715 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:50:42,716 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,716 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:50:42,717 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,717 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:50:42,717 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,717 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:50:42,718 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,718 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:50:42,719 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,719 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:50:42,719 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,720 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:50:42,720 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,720 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:50:42,721 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,721 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:50:42,721 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,722 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:50:42,722 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,722 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:50:42,723 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,723 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:50:42,723 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,723 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:50:42,724 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,724 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:50:42,725 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,725 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:50:42,725 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,725 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:50:42,726 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,726 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:50:42,727 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,727 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:50:42,727 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,727 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id) VALUES (%s, %s)
2023-09-24 09:50:42,728 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:50:42,728 - db.py - DEBUG - Executing query: SELECT r.name, r.id FROM pealringers pr JOIN ringers r ON pr.ringer_id = r.id WHERE pr.peal_id = %s
2023-09-24 09:55:27,077 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:55:27,109 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:27,110 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:55:27,110 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:55:27,111 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:55:27,112 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:55:27,138 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:55:27,138 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:55:27,140 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:55:27,140 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:55:27,151 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:55:27,151 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:55:27,157 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:55:27,157 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:55:27,166 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:55:32,217 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1180933
2023-09-24 09:55:32,228 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,229 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:55:32,232 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,232 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 09:55:32,232 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,233 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:55:32,234 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,234 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:55:32,235 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,235 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:55:32,237 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,238 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:55:32,240 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,240 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:55:32,241 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,241 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:55:32,242 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,242 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:55:32,242 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,243 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:55:32,243 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,243 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:55:32,244 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,244 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:55:32,245 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,245 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:55:32,245 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,246 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:55:32,246 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,247 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:55:32,247 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,248 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:55:32,248 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,248 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:55:32,249 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,249 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:55:32,250 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,250 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:55:32,250 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:32,250 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:55:37,869 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:55:37,869 - db.py - DEBUG - Executing query: SELECT r.name, r.id FROM pealringers pr JOIN ringers r ON pr.ringer_id = r.id WHERE pr.peal_id = %s ORDER BY pr.bell ASC
2023-09-24 09:56:20,525 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 09:56:20,542 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:20,542 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 09:56:20,543 - db.py - INFO - Creating new pypeal database...
2023-09-24 09:56:20,544 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 09:56:20,544 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 09:56:20,560 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 09:56:20,560 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 09:56:20,562 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 09:56:20,562 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 09:56:20,576 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 09:56:20,576 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 09:56:20,583 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 09:56:20,583 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 09:56:20,601 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 09:56:23,414 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1441332
2023-09-24 09:56:23,421 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,422 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 09:56:23,423 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,424 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 09:56:23,424 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,424 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:56:23,425 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,425 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:56:23,426 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,426 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:56:23,427 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,427 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:56:23,428 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,428 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:56:23,428 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,428 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:56:23,429 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,429 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:56:23,429 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,430 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:56:23,430 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,430 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:56:23,431 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,431 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:56:23,431 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,431 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:56:23,432 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,432 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:56:23,432 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,433 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:56:23,433 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,433 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:56:23,434 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,434 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:56:23,435 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,435 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 09:56:23,436 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,436 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 09:56:23,437 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,437 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 09:56:23,438 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 09:56:23,438 - db.py - DEBUG - Executing query: SELECT r.name, r.id FROM pealringers pr JOIN ringers r ON pr.ringer_id = r.id WHERE pr.peal_id = %s ORDER BY pr.bell ASC
2023-09-24 10:05:31,016 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 10:05:31,046 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:31,046 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 10:05:31,047 - db.py - INFO - Creating new pypeal database...
2023-09-24 10:05:31,048 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 10:05:31,049 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 10:05:31,067 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 10:05:31,067 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 10:05:31,070 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 10:05:31,070 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 10:05:31,082 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 10:05:31,082 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 10:05:31,089 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 10:05:31,090 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 10:05:31,111 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 10:05:34,525 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1551041
2023-09-24 10:05:34,532 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,532 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 10:05:34,534 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,534 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 10:05:34,534 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,534 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:34,535 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,536 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:34,536 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,536 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:34,537 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,538 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:34,540 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,540 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:34,540 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,540 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:34,541 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,541 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:34,542 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,542 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:34,542 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,543 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:34,543 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,543 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:34,544 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,544 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:34,544 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,545 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:34,545 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,545 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:34,546 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,546 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:34,546 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,546 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:34,547 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,547 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:34,548 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,548 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:34,548 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,548 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:34,549 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,549 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:34,549 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,550 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:34,550 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,550 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:34,551 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,551 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:34,552 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,552 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:34,552 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,552 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:34,553 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:34,553 - db.py - DEBUG - Executing query: SELECT r.id, pr.bell FROM pealringers pr JOIN ringers r ON pr.ringer_id = r.id WHERE pr.peal_id = %s ORDER BY pr.bell ASC
2023-09-24 10:05:48,450 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 10:05:48,473 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:48,473 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 10:05:48,474 - db.py - INFO - Creating new pypeal database...
2023-09-24 10:05:48,475 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 10:05:48,475 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 10:05:48,500 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 10:05:48,500 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 10:05:48,502 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 10:05:48,503 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 10:05:48,516 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 10:05:48,516 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 10:05:48,524 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 10:05:48,524 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 10:05:48,539 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 10:05:49,852 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1091647
2023-09-24 10:05:49,856 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,857 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 10:05:49,860 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,860 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 10:05:49,860 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,861 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:49,863 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,863 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,864 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,864 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:49,866 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,866 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:49,867 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,867 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,867 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,868 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:49,869 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,869 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:49,870 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,870 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,870 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,870 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:49,871 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,871 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:49,872 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,872 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,873 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,873 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:49,873 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,874 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:49,874 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,874 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,875 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,875 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:49,876 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,876 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:49,876 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,877 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,877 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,877 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:49,878 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,878 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:49,879 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,879 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,879 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,880 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:49,880 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,880 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:05:49,881 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,881 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,881 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,881 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:05:49,881 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,882 - db.py - DEBUG - Executing query: SELECT r.id, pr.bell FROM pealringers pr JOIN ringers r ON pr.ringer_id = r.id WHERE pr.peal_id = %s ORDER BY pr.bell ASC
2023-09-24 10:05:49,882 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,882 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,882 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,882 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,882 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,882 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,882 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,882 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,883 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,883 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,883 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,883 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,883 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,883 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:05:49,883 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:05:49,883 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:10:18,985 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 10:10:19,005 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:10:19,005 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 10:10:19,006 - db.py - INFO - Creating new pypeal database...
2023-09-24 10:10:19,007 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 10:10:19,007 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 10:10:19,028 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 10:10:19,028 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 10:10:19,031 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 10:10:19,031 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 10:10:19,047 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 10:10:19,048 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 10:10:19,058 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 10:10:19,058 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 10:10:19,080 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 10:10:22,443 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1591782
2023-09-24 10:10:22,449 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:10:22,449 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 10:10:22,451 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:10:22,451 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 10:10:22,452 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:10:22,452 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:10:22,454 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:10:22,454 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:10:22,454 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:10:22,455 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:10:22,456 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:10:22,456 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:10:58,388 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 10:10:58,405 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:10:58,405 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 10:10:58,407 - db.py - INFO - Creating new pypeal database...
2023-09-24 10:10:58,408 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 10:10:58,408 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 10:10:58,429 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 10:10:58,430 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 10:10:58,433 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 10:10:58,433 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 10:10:58,448 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 10:10:58,449 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 10:10:58,462 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 10:10:58,462 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`, 'bell'),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 10:10:58,462 - main.py - ERROR - Unable to create database: Error running database install script scripts/database/004-create-ringer-peals.sql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''bell'),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pea' at line 5
2023-09-24 10:10:58,462 - main.py - DEBUG - Error running database install script scripts/database/004-create-ringer-peals.sql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''bell'),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pea' at line 5
Traceback (most recent call last):
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 633, in cmd_query
    self._cmysql.query(
_mysql_connector.MySQLInterfaceError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''bell'),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pea' at line 5

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 43, in initialise
    self.__execute(self.__substitute_sql_params(f.read()))
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 54, in __execute
    self.cursor.execute(query, params)
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/cursor_cext.py", line 330, in execute
    result = self._cnx.cmd_query(
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 77, in wrapper
    return method(cnx, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tom.longridge/.local/share/virtualenvs/pypeal-lArsArI3/lib/python3.11/site-packages/mysql/connector/connection_cext.py", line 641, in cmd_query
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''bell'),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pea' at line 5

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/main.py", line 24, in <module>
    Database.get_connection().initialise(overwrite_database=True)
  File "/Users/tom.longridge/projects/HomeProjects/pypeal/db.py", line 46, in initialise
    raise DatabaseError(f'Error running database install script {path}: {e.msg}') from e
db.DatabaseError: Error running database install script scripts/database/004-create-ringer-peals.sql: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''bell'),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pea' at line 5
2023-09-24 10:11:17,002 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 10:11:17,023 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,023 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 10:11:17,024 - db.py - INFO - Creating new pypeal database...
2023-09-24 10:11:17,025 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 10:11:17,026 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 10:11:17,037 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 10:11:17,038 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 10:11:17,040 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 10:11:17,041 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 10:11:17,052 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 10:11:17,052 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 10:11:17,060 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 10:11:17,060 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`, `bell`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 10:11:17,075 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 10:11:17,381 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=4155
2023-09-24 10:11:17,387 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,388 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 10:11:17,389 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,390 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 10:11:17,390 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,390 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:17,392 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,392 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,392 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,392 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:17,395 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,395 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:17,396 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,396 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,396 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,396 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:17,397 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,397 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:17,398 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,398 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,398 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,399 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:17,399 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,400 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:17,400 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,401 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,401 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,401 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:17,402 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,402 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:17,403 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,403 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,403 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,403 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:17,404 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,404 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:17,405 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,405 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,405 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,405 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:17,406 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,406 - db.py - DEBUG - Executing query: SELECT r.id, pr.bell FROM pealringers pr JOIN ringers r ON pr.ringer_id = r.id WHERE pr.peal_id = %s ORDER BY pr.bell ASC
2023-09-24 10:11:17,406 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,406 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,407 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,407 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,407 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,407 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,407 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,408 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,408 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,408 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:17,408 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:17,408 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:23,452 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 10:11:23,472 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:23,472 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 10:11:23,472 - db.py - INFO - Creating new pypeal database...
2023-09-24 10:11:23,473 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 10:11:23,473 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 10:11:23,493 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 10:11:23,493 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 10:11:23,496 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 10:11:23,496 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 10:11:23,510 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 10:11:23,510 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 10:11:23,517 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 10:11:23,518 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`, `bell`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 10:11:23,527 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 10:11:25,484 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1286197
2023-09-24 10:11:25,491 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:25,493 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 10:11:25,496 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:25,496 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 10:11:25,496 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:25,496 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:25,498 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:25,498 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:25,498 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:25,498 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:25,499 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:25,505 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:41,994 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 10:11:42,011 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:42,011 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 10:11:42,012 - db.py - INFO - Creating new pypeal database...
2023-09-24 10:11:42,013 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 10:11:42,013 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 10:11:42,031 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 10:11:42,032 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 10:11:42,034 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 10:11:42,034 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 10:11:42,050 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 10:11:42,050 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 10:11:42,083 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 10:11:42,083 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`, `bell`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`, `bell`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 10:11:42,098 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 10:11:43,245 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=1000771
2023-09-24 10:11:43,249 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,250 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 10:11:43,252 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,252 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 10:11:43,253 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,253 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:43,254 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,254 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,254 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,254 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:43,256 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,256 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:43,256 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,256 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,257 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,257 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:43,258 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,258 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:43,259 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,259 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,260 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,260 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:43,261 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,261 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:43,262 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,262 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,262 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,263 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:43,263 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,263 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:43,264 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,264 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,264 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,264 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:43,265 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,265 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:43,266 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,266 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,266 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,266 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:43,267 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,267 - db.py - DEBUG - Executing query: SELECT r.id, pr.bell FROM pealringers pr JOIN ringers r ON pr.ringer_id = r.id WHERE pr.peal_id = %s ORDER BY pr.bell ASC
2023-09-24 10:11:43,267 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,267 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,268 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,268 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,269 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,269 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,269 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,269 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,269 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,269 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:43,270 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:43,270 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:52,337 - db.py - INFO - Connecting to database server localhost as user pypeal
2023-09-24 10:11:52,353 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:52,353 - db.py - DEBUG - Executing query: SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "pypeal"
2023-09-24 10:11:52,354 - db.py - INFO - Creating new pypeal database...
2023-09-24 10:11:52,356 - db.py - INFO - Running script scripts/database/000-drop-database.sql...
2023-09-24 10:11:52,356 - db.py - DEBUG - Executing query: DROP DATABASE IF EXISTS pypeal;
2023-09-24 10:11:52,374 - db.py - INFO - Running script scripts/database/001-create-database.sql...
2023-09-24 10:11:52,374 - db.py - DEBUG - Executing query: CREATE DATABASE pypeal;
2023-09-24 10:11:52,377 - db.py - INFO - Running script scripts/database/002-create-ringers.sql...
2023-09-24 10:11:52,377 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`ringers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);
2023-09-24 10:11:52,393 - db.py - INFO - Running script scripts/database/003-create-peals.sql...
2023-09-24 10:11:52,394 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`peals` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `bellboard_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`));

2023-09-24 10:11:52,403 - db.py - INFO - Running script scripts/database/004-create-ringer-peals.sql...
2023-09-24 10:11:52,403 - db.py - DEBUG - Executing query: CREATE TABLE pypeal.`pealringers` (
  `ringer_id` int UNSIGNED NOT NULL,
  `peal_id` int UNSIGNED NOT NULL,
  `bell` int UNSIGNED,
  PRIMARY KEY (`ringer_id`, `peal_id`, `bell`),
  UNIQUE KEY `id_unique` (`ringer_id`, `peal_id`, `bell`),
  CONSTRAINT `fk_pealringers_ringer` FOREIGN KEY (`ringer_id`) REFERENCES `ringers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_pealringers_peal` FOREIGN KEY (`peal_id`) REFERENCES `peals` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
)
2023-09-24 10:11:52,419 - bellboard.py - INFO - Getting peal at https://bb.ringingworld.co.uk/view.php?random
2023-09-24 10:11:53,233 - bellboard.py - INFO - Retrieved peal at https://bb.ringingworld.co.uk/view.php?id=132461
2023-09-24 10:11:53,240 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,241 - db.py - DEBUG - Executing query: INSERT INTO peals (bellboard_id) VALUES (%s)
2023-09-24 10:11:53,244 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,244 - db.py - DEBUG - Executing query: SELECT bellboard_id, id FROM peals WHERE id = %s
2023-09-24 10:11:53,244 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,245 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:53,246 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,246 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,246 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,246 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,247 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,247 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,249 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,249 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:53,251 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,252 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,252 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,252 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,252 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,252 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,253 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,254 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:53,254 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,255 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,255 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,255 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,255 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,255 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,256 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,256 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:53,257 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,257 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,257 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,257 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,258 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,258 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,259 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,259 - db.py - DEBUG - Executing query: INSERT INTO ringers (name) VALUES (%s)
2023-09-24 10:11:53,259 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,261 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,262 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,262 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,262 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,262 - db.py - DEBUG - Executing query: INSERT INTO pealringers (peal_id, ringer_id, bell) VALUES (%s, %s, %s)
2023-09-24 10:11:53,263 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,263 - db.py - DEBUG - Executing query: SELECT r.id, pr.bell FROM pealringers pr JOIN ringers r ON pr.ringer_id = r.id WHERE pr.peal_id = %s ORDER BY pr.bell ASC
2023-09-24 10:11:53,263 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,263 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,264 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,264 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,264 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,264 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,264 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,264 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,264 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,264 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: USE pypeal
2023-09-24 10:11:53,265 - db.py - DEBUG - Executing query: SELECT name, id FROM ringers WHERE id = %s
